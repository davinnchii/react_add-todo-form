{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","classNames","TodoList","todos","map","todoTask","getUserById","usersFromServer","find","getMaxTodoId","todoIds","Math","max","App","useState","todosFromServer","setTodos","newUser","isEmpty","setIsEmpty","newTitle","setNewTitle","newUserId","setnewUserId","action","method","onSubmit","event","newTodo","preventDefault","prevTodos","htmlFor","type","value","placeholder","onChange","target","prev","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9ad7972a.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { User } from '../../types';\n\ntype Props = {\n  user: User | null,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return user && (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/todo';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article\n    className={classNames('TodoInfo', {\n      'TodoInfo--completed': todo.completed,\n    })}\n    data-id={todo.id}\n  >\n    <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n    <UserInfo user={todo.user} />\n  </article>\n);\n","import { Todo } from '../../types/todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todoTask => (\n      <TodoInfo\n        key={todoTask.id}\n        todo={todoTask}\n      />\n    ))}\n  </section>\n);\n","import './App.scss';\n\nimport { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { Todo } from './types/todo';\nimport { User } from './types';\n\nfunction getUserById(userId: number) {\n  return usersFromServer.find(user => user.id === userId)\n    || null;\n}\n\nfunction getMaxTodoId(todos: Todo[]) {\n  const todoIds = todos.map(({ id }) => id);\n\n  return Math.max(...todoIds);\n}\n\nexport const createTodos = () => (todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n})));\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(createTodos());\n  const [isEmpty, setIsEmpty] = useState(\n    { title: false, newUser: false },\n  );\n  const [newTitle, setNewTitle] = useState('');\n  const [newUserId, setnewUserId] = useState(0);\n\n  const onAdd = (newTodo: Todo) => {\n    setTodos(prevTodos => [...prevTodos, newTodo]);\n  };\n\n  const handleSetTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setNewTitle(event.target.value);\n    setIsEmpty((prev) => ({ ...prev, title: false }));\n  };\n\n  const handleSetUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setnewUserId(+event.target.value);\n    setIsEmpty((prev) => ({ ...prev, newUser: false }));\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (!newTitle || !newUserId) {\n      setIsEmpty(() => (\n        { title: !newTitle, newUser: !newUserId }\n      ));\n\n      return;\n    }\n\n    onAdd({\n      id: getMaxTodoId(todos) + 1,\n      title: newTitle,\n      completed: false,\n      user: getUserById(newUserId),\n    });\n    setNewTitle('');\n    setnewUserId(0);\n    setIsEmpty(() => (\n      { title: false, newUser: false }\n    ));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"#title\">\n            {'Title: '}\n            <input\n              id=\"title\"\n              type=\"text\"\n              data-cy=\"titleInput\"\n              value={newTitle}\n              placeholder=\"Enter a title\"\n              onChange={handleSetTitle}\n            />\n          </label>\n          {(isEmpty.title) && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">\n            {'User: '}\n            <select\n              id=\"userSelect\"\n              data-cy=\"userSelect\"\n              value={newUserId}\n              onChange={handleSetUser}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map((user: User) => (\n                <option value={user.id}>{user.name}</option>\n              ))}\n            </select>\n          </label>\n          {(isEmpty.newUser) && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}